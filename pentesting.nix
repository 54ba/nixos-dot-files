{ config, lib, pkgs, ... }:

with lib;

let
  # Custom Python packages for pentesting
  pythonPentestingPackages = ps: with ps; [
    requests
    beautifulsoup4
    scapy
    impacket
    pycryptodome
    paramiko
    pwntools
    ropper
    capstone
    keystone-engine
    unicorn
    angr
    z3-solver
  ];

  # Create custom Python environment for pentesting
  pythonEnv = pkgs.python3.withPackages pythonPentestingPackages;

  # Custom wordlists and tools
  customWordlists = pkgs.stdenv.mkDerivation {
    name = "custom-wordlists";
    src = pkgs.fetchFromGitHub {
      owner = "danielmiessler";
      repo = "SecLists";
      rev = "2024.1";
      sha256 = "sha256-6XEw2O3pL9pW5BPHPf2HEj9VvQx4FCy6SnwZZh7XZ5A=";
    };
    installPhase = ''
      mkdir -p $out/share/wordlists
      cp -r . $out/share/wordlists/seclists
    '';
  };

  # OSINT tools collection
  osintTools = with pkgs; [
    theharvester
    recon-ng
    maltego
    spiderfoot
    shodan
    # Custom OSINT scripts
    (writeShellScriptBin "osint-domains" ''
      #!/bin/bash
      echo "Domain OSINT Collection for: $1"
      echo "=================================="
      echo "Running whois..."
      whois "$1" | head -20
      echo ""
      echo "Running dig..."
      dig "$1" +short
      echo ""
      echo "Running nslookup..."
      nslookup "$1"
    '')
    (writeShellScriptBin "osint-email" ''
      #!/bin/bash
      echo "Email OSINT Collection for: $1"
      echo "=============================="
      echo "Running theHarvester..."
      theharvester -d "$1" -l 100 -b google,bing,baidu
    '')
  ];

in
{
  options.pentesting = {
    enable = mkEnableOption "Enable penetration testing tools";
    
    modules = {
      metasploit = {
        enable = mkOption {
          type = types.bool;
          default = false;
          description = "Include Metasploit framework (heavy package)";
        };
      };
      
      wireless = {
        enable = mkOption {
          type = types.bool;
          default = true;
          description = "Include wireless security tools";
        };
      };
      
      forensics = {
        enable = mkOption {
          type = types.bool;
          default = true;
          description = "Include digital forensics tools";
        };
      };
      
      webapp = {
        enable = mkOption {
          type = types.bool;
          default = true;
          description = "Include web application security tools";
        };
      };
      
      osint = {
        enable = mkOption {
          type = types.bool;
          default = true;
          description = "Include OSINT (Open Source Intelligence) tools";
        };
      };
      
      malware = {
        enable = mkOption {
          type = types.bool;
          default = false;
          description = "Include malware analysis tools";
        };
      };
      
      crypto = {
        enable = mkOption {
          type = types.bool;
          default = true;
          description = "Include cryptography and hash cracking tools";
        };
      };
      
      social = {
        enable = mkOption {
          type = types.bool;
          default = false;
          description = "Include social engineering tools";
        };
      };
    };
    
    createDesktopEntries = mkOption {
      type = types.bool;
      default = true;
      description = "Create desktop entries for GUI tools";
    };
    
    setupWordlists = mkOption {
      type = types.bool;
      default = true;
      description = "Download and setup common wordlists";
    };
  };

  config = mkIf config.pentesting.enable {
    # Add pentesting user to wireshark group
    users.groups.wireshark = {};
    
    environment.systemPackages = with pkgs; [
      # Always include core tools
      pythonEnv
      
      # Core network security tools
      nmap
      masscan
      rustscan
      wireshark
      wireshark-cli
      tcpdump
      netcat-gnu
      socat
      ettercap
      
      # Basic enumeration
      whois
      dnsutils
      host
      netdiscover
      arp-scan
      
      # Essential utilities
      curl
      wget
      jq
      xxd
      hexdump
      
    ] ++ optionals config.pentesting.modules.metasploit.enable [
      # Metasploit framework (large package)
      metasploit
    ] ++ optionals config.pentesting.modules.wireless.enable [
      # Wireless security tools
      aircrack-ng
      reaver
      pixiewps
      wifite2
      kismet
      bettercap
      hashcat-utils
    ] ++ optionals config.pentesting.modules.forensics.enable [
      # Digital forensics
      autopsy
      sleuthkit
      volatility3
      foremost
      scalpel
      ddrescue
      binwalk
      exiftool
      file
      strings
    ] ++ optionals config.pentesting.modules.webapp.enable [
      # Web application tools
      burpsuite
      zaproxy
      wfuzz
      ffuf
      gobuster
      dirb
      dirbuster
      sqlmap
      nikto
      wapiti
      sublist3r
      amass
    ] ++ optionals config.pentesting.modules.osint.enable (
      osintTools ++ [
        # Additional OSINT tools
        sherlock
        photon
        finalrecon
      ]
    ) ++ optionals config.pentesting.modules.malware.enable [
      # Malware analysis
      radare2
      ghidra
      cutter
      yara
      clamav
      rkhunter
      chkrootkit
      ltrace
      strace
      gdb
      objdump
      readelf
    ] ++ optionals config.pentesting.modules.crypto.enable [
      # Cryptography and hash cracking
      john
      hashcat
      hydra
      medusa
      crunch
      maskprocessor
      statsprocessor
      princeprocessor
      # Crypto tools
      openssl
      steghide
      outguess
      zsteg
    ] ++ optionals config.pentesting.modules.social.enable [
      # Social engineering (use with caution)
      setoolkit
      theharvester
    ] ++ optionals config.pentesting.setupWordlists [
      customWordlists
      seclists
    ];
    
    # Create shell aliases for common pentesting tasks
    environment.shellAliases = {
      "nmap-quick" = "nmap -T4 -F";
      "nmap-stealth" = "nmap -sS -O -sV";
      "nmap-full" = "nmap -sS -sU -T4 -A -v";
      "nc-listen" = "nc -lvnp";
      "http-server" = "python3 -m http.server";
      "enum-smb" = "smbclient -L";
      "crack-zip" = "john --wordlist=/usr/share/wordlists/rockyou.txt";
      "wireshark-no-root" = "wireshark";
    };
    
    # Enable necessary services for some tools
    services.postgresql = mkIf config.pentesting.includeMetasploit {
      enable = true;
      package = pkgs.postgresql;
    };
    
    # Create wordlists directory and populate it
    system.activationScripts.setupWordlists = ''      
      mkdir -p /usr/share/wordlists
      
      # Common wordlists (create if they don't exist)
      if [ ! -f /usr/share/wordlists/rockyou.txt ]; then
        echo "Creating basic wordlist..."
        cat > /usr/share/wordlists/rockyou.txt << 'EOF'
123456
password
12345678
qwerty
abc123
admin
letmein
monkey
1234567890
dragon
EOF
      fi
    '';
    
    # Security reminder
    environment.etc."pentesting-notice".text = ''
      PENETRATION TESTING TOOLS NOTICE
      ================================
      
      These tools are installed for legitimate security testing purposes only.
      
      IMPORTANT LEGAL NOTICE:
      - Only use these tools on systems you own or have explicit written permission to test
      - Unauthorized penetration testing is illegal in most jurisdictions
      - Always follow responsible disclosure practices
      - Ensure compliance with local laws and regulations
      - Get proper authorization before conducting any security assessments
      
      For educational purposes, consider setting up isolated lab environments.
      
      Common lab environments:
      - VulnHub VMs
      - DVWA (Damn Vulnerable Web Application)
      - Metasploitable
      - OWASP WebGoat
      - TryHackMe/HackTheBox platforms
    '';
  };
}

